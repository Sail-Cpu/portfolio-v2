name: Deploy 

on:
  push:
    branches:
      - master

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio-v2:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
  
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
  
      - name: Pull Docker Image
        run: docker pull "${{ secrets.DOCKER_USERNAME }}/portfolio-v2:latest"
  
      - name: Stop and Remove Old Container
        run: |
          docker stop portfolio || true
          docker rm portfolio || true
  
      - name: Create .env File
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env
          echo "REACT_APP_AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "REACT_APP_PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "REACT_APP_STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" > .env
          echo "REACT_APP_MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_APP_ID=${{ secrets.APP_ID }}" > .env
          echo "REACT_APP_MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> .env
  
      - name: Run Docker Container
        run: docker run -d --name portfolio -p 8080:80 --env-file .env "${{ secrets.DOCKER_USERNAME }}/portfolio-v2:latest"
